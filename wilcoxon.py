'''
 * Data augmentation based on random spatial deformations
 * Authors: F. Allender, R. All√®gre, C. Wemmert, J.-M. Dischler
 *
 * Code author: Florian Allender
 *
 * anonymous
 * anonymous

 * @version 1.0
'''

import numpy as np
from scipy.stats import mannwhitneyu
from scipy.stats import wilcoxon

baseline = [61.1221, 69.446, 60.2271, 59.9142, 60.8498]


gbd335   = [76.8923, 75.3258, 76.9841, 76.2099,	78.9876]
gbd3310  = [81.8753, 79.2827, 80.6964, 83.7666,	83.2478]
gbd3320  = [86.2557, 87.8753, 86.9777, 84.1029,	84.4614]
gbd3350  = [83.5204, 86.4659, 85.4879, 86.2816, 83.7561]
gbd355   = [77.1514, 82.3749, 79.9538, 79.391, 77.6573]
gbd3510  = [86.2831, 84.4938, 87.2794, 83.8855, 78.4286]
gbd3520  = [78.866, 86.538, 79.5826, 79.1694, 81.5264]
gbd3550  = [73.3802, 77.8097, 73.9449, 65.0761, 78.816]
gbd3105  = [80.8753, 80.5216, 82.2541, 76.6975,	85.2905]
gbd31010 = [84.4554, 86.0077, 86.2467, 82.9848,	82.6894]
gbd31020 = [73.9246, 75.8111, 79.3964, 75.8054,	70.3772]
gbd31050 = [71.1374, 71.5147, 71.2392, 66.7548, 69.9095]


gbd235   = [80.873, 77.2006, 76.3468, 81.4578, 78.3403]
gbd2310  = [85.1773, 75.8117, 80.854, 81.9007, 85.0648]
gbd2320  = [84.4442, 86.9248, 85.0317, 82.3553, 82.9494]
gbd2350  = [83.0282, 85.7952, 84.7097, 87.2143, 84.3287]
gbd255   = [80.9498, 78.2479, 79.8089, 80.8426, 80.8616]
gbd2510  = [86.446,	84.3184, 81.052, 80.5358, 83.6642]
gbd2520  = [84.8485, 85.0786, 83.7955, 86.5428,	86.8087]
gbd2550  = [80.1918, 72.8057, 80.9372, 81.3911,	79.0727]
gbd2105  = [81.87, 78.6832, 80.8499, 82.3254, 77.6733]
gbd21010 = [86.1129, 83.4265, 78.7107, 85.8559,	86.0088]
gbd21020 = [80.1892, 73.4948, 76.5384, 79.0984,	73.0642]
gbd21050 = [68.5897, 75.5861, 65.9036, 77.2519, 71.1947]


sim1005  = [76.3278, 73.3401, 80.695, 75.5198, 73.4216]
sim10010 = [72.2923, 74.9936, 74.5617, 63.6329,	77.0243]
sim10020 = [57.6323, 67.9145, 71.3056, 67.9541, 67.8661]
sim2005  = [77.0288, 74.949, 68.6631, 74.4919, 68.6343]
sim20010 = [79.3378, 76.1164, 75.0052, 78.2152, 78.7481]
sim20020 = [75.5192, 79.7517, 75.1156, 70.7454,	67.2135]
sim4005  = [59.712,	54.7905, 50.6733, 49.8384, 52.1013]
sim40010 = [74.9944, 81.8979, 74.7519, 81.5915, 81.3705]
sim40020 = [78.8436, 80.8883, 78.1198, 74.5541, 74.056]
sim8005  = [49.2891, 47.393, 54.9633, 45.628, 43.0898]
sim80010 = [80.1483, 77.7792, 78.8812, 76.9465, 75.6026]
sim80020 = [80.2009, 74.0478, 79.671, 79.8472, 79.1736]
sim240040 = [74.1967, 74.9682, 76.7582, 79.7722, 72.0037]
sim500040 = [65.2502, 68.9617, 70.259, 70.9844, 69.509]


mls5   = [81.4138, 81.3546, 82.5874, 83.966, 81.2794]
mls10  = [85.1216, 85.8236, 85.1733, 85.9901, 82.952]
mls15  = [83.0993, 86.1156, 85.2924, 87.7426, 83.9796]
mls30  = [82.8658, 85.2129, 83.5137, 84.3251, 80.957]
mls100 = [65.7806, 69.025, 72.3846, 72.6864, 72.1964]

best = [baseline, gbd2520, gbd3320, sim20010, mls15]

gbd3 = [gbd335, gbd3310, gbd3320, gbd3350, gbd355, gbd3510, gbd3520, gbd3550, gbd3105, gbd31010, gbd31020, gbd31050]
gbd2 = [gbd235, gbd2310, gbd2320, gbd2350, gbd255, gbd2510, gbd2520, gbd2550, gbd2105, gbd21010, gbd21020, gbd21050]
sim = [sim1005, sim10010, sim10020, sim2005, sim20010, sim20020, sim4005, sim40010, sim40020, sim8005, sim80010, sim80020, sim240040, sim500040]
mls = [mls5, mls10, mls15, mls30, mls100]


results = []

L = mls
for i in range(len(L)):
	l = []
	for j in range(len(L)):
		U1, p = mannwhitneyu(L[i], L[j], method='exact')
		l.append(p)
	results.append(l)


for l in results:
	ch = ""
	for i in l:
		ch += "& $"+str(round(i,3))+"$ "
	ch += " \\\ \hline"
	print(ch)



results = []
L = best
for i in range(len(L)):
	U1, p = mannwhitneyu(L[0], L[i], method='exact', alternative='less')
	results.append(p)
#print(results)
